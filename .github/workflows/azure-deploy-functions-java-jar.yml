name: Deploy Java project transmyrapport to function app
env:
  AZURE_FUNCTIONAPP_NAME: azure-function-1650971708752    # set this to your function app name on Azure
  POM_XML_DIRECTORY: ''                                   # set the directory to pom.xml file
  POM_FUNCTIONAPP_NAME: azure-function-1650971708752      # set to the function app name in local environment
  JAVA_VERSION: '1.8.x'                                   # set this to the Java version to use

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]  # [created, push commits, geopend closed pr]
  workflow_dispatch:                          # makes is possible to manual run workflow

jobs:
  build-job:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

  analyse-job:
    runs-on: ubuntu-latest
    needs: build-job
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar /
          -Dsonar.projectKey=SagiScriptie_azure-functions-transmyrapport

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-job:
    runs-on: ubuntu-latest
    needs: [ build-job, analyse-job ]
    steps:
      - name: 'Restore Project Dependencies Using Mvn'
        shell: pwsh
        run: |
          pushd './${{ env.POM_XML_DIRECTORY }}'
          mvn clean package
          mvn azure-functions:package
          popd
      - name: 'Run Azure Functions Action'                #login in Azure and deploy with publish profile
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: './${{ env.POM_XML_DIRECTORY }}/target/azure-functions/${{ env.POM_FUNCTIONAPP_NAME }}'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
